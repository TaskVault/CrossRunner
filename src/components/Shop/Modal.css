/* Add this to your CSS file */
.modal-overlay {
    position: fixed;
    top: 1rem;
    left: 1rem;
    right: 1rem;
    bottom: 1rem;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
    height: auto;
}

.character-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    height: 100%;
}

.modal-content {
    padding: 1rem;
    border-radius: 10px;
    box-shadow: 0 10px 100px rgba(0, 0, 0, 0.4);
    height: 90vh;
    width: 95vw; /* Set the width to be 95% of the viewport width */
    max-width: 1200px; /* You can adjust this value to suit your needs */
    background-image: linear-gradient(to top, #94a8f7 15%, #aba4fc 100%);
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    position: relative;
    overflow: hidden;
}

.close-button {
    font-size: 1.5rem; /* Large font size for better visibility */
    color:#888; /* Change color as needed */
    border: none; /* Remove default button border */
    background: transparent; /* Remove default button background */
    cursor: pointer;
    padding: 0; /* Remove default padding */
    float: right; /* Position it to the right */
    position: absolute;
    top: 10px;
    right: 10px;
}

.character-image-container {
    text-align: center; /* Center image horizontally */
}

.character-image-container img {
    max-height: 20rem; /* Maximum height allowed for the image */
    display: inline; /* Display image as an inline element, respecting text-align */
    object-fit: contain; /* Ensures the image is fully visible within its container */
}
.character-info {
    overflow-y: auto; /* Make info scrollable */
    height: 40%; /* Info takes up 40% of the container */
    margin: 10px 0; /* Add padding as needed */
}

.character-action {
    height: 10%; /* Button area takes up 10% of the container */
    display: flex;
    align-items: center;
    justify-content: center; /* Center the button */
    width: 100%;
}